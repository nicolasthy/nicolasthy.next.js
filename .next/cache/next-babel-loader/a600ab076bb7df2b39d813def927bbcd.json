{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { processMarkdown, readingTime } from \"../helpers/PostsHelper\";\n\nfunction getPosts(count = null) {\n  const posts = (context => {\n    const keys = context.keys();\n    const values = keys.map(context);\n    const data = keys.map((key, index) => {\n      const slug = key.replace(/^.*[\\\\\\/]/, \"\").split(\".\").slice(0, -1).join(\".\");\n      const value = values[index];\n      const post = processMarkdown(value);\n      return _objectSpread(_objectSpread({}, post), {}, {\n        readingTime: readingTime(post.content),\n        slug\n      });\n    });\n    return data;\n  })(require.context(\"../posts\", true, /\\.md$/));\n\n  return posts.sort((a, b) => new Date(b.data.created_at) - new Date(a.data.created_at)).slice(0, count || posts.length);\n}\n\nasync function getPostBySlug(slug) {\n  const data = await import(`../posts/${slug}.md`);\n  const post = processMarkdown(data);\n  return post;\n}\n\nexport { getPosts, getPostBySlug };","map":null,"metadata":{},"sourceType":"module"}