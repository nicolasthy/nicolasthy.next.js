{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useEffect, useState } from \"react\";\nimport { useTheme } from \"emotion-theming\";\nimport styled from \"@emotion/styled\";\nimport mediumZoom from \"medium-zoom\";\n\nconst PostImage = ({\n  alt,\n  src\n}) => {\n  const imagePreloader = src.replace(src.match(/(?:\\.([^.]+))?$/)[0], `.min${src.match(/(?:\\.([^.]+))?$/)[0]}`);\n  const theme = useTheme();\n  const imageRef = useRef();\n  const {\n    0: image,\n    1: setImage\n  } = useState(imagePreloader);\n  useEffect(() => {\n    mediumZoom(imageRef.current);\n    const imageFull = new Image();\n\n    imageFull.onload = () => {\n      setImage(imageFull);\n    };\n\n    imageFull.src = src;\n    return () => {\n      imageFull.onload = null;\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(StyledImage, {\n    theme: theme,\n    style: {\n      backgroundImage: `url(${image.src || image})`,\n      transition: '0.5s filter linear',\n      filter: `${image.src ? '' : 'blur(25px)'}`\n    }\n  }, __jsx(\"img\", {\n    ref: imageRef,\n    alt: alt,\n    src: image.src || image\n  })), __jsx(StyledAlt, null, alt));\n};\n\nconst StyledImage = styled.span`\n    max-width: 120%;\n    margin: 40px -10% 20px;\n    display: block;\n    position: relative;\n\n    img {\n        opacity: 0;\n        display: block;\n        width: 100%;\n        position: relative;\n        z-index: 2;\n    }\n\n    &::before,\n    &::after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-image: inherit;\n        background-size: cover;\n        background-position: center center;\n    }\n\n    &::before {\n        top: 10px;\n        filter: blur(25px);\n        backface-visibility: visible;\n        transform: scale(1.03) translate3d(0, 0, 0);\n        z-index: 0;\n        opacity: ${({\n  theme\n}) => theme.posts.imageShadowOpacity};\n        transition: opacity 0.2 linear;\n    }\n\n    &::after {\n        z-index: 1;\n    }\n`;\nconst StyledAlt = styled.span`\n    display: block;\n    text-align: center;\n    margin: 0 0 40px;\n    font-size: 12px;\n    opacity: 0.5;\n    font-family: \"Poppins\", sans-serif;\n`;\nexport default PostImage;","map":null,"metadata":{},"sourceType":"module"}