{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    font-size: 18px;\\n                    line-height: 2.125;\\n                    p {\\n                        color: \", \";\\n                    }\\n                \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    font-size: 52px;\\n                    font-weight: 700;\\n                \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useTheme } from \"emotion-theming\";\nimport ReactMarkdown from \"react-markdown\";\nimport Head from \"next/head\";\nimport { siteMetadata } from \"../../config/site-config\";\nimport { getPostBySlug } from \"../../data/Posts\";\nimport Image from \"../../components/posts/Image\";\nimport SyntaxHighlight from \"../../components/posts/SyntaxHighlight\";\n\nvar Post = function Post(_ref) {\n  var post = _ref.post;\n  var theme = useTheme();\n  return jsx(React.Fragment, null, jsx(Head, null, jsx(\"title\", null, post.data.title, \" - \", siteMetadata.title), jsx(\"meta\", {\n    name: \"description\",\n    content: post.excerpt\n  })), jsx(\"h1\", {\n    css: css(_templateObject())\n  }, post.data.title), jsx(ReactMarkdown, {\n    source: post.content,\n    renderers: {\n      code: SyntaxHighlight,\n      image: Image\n    },\n    css: css(_templateObject2(), theme.textLight)\n  }));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var slug, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          slug = context.query.slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getPostBySlug(slug));\n\n        case 3:\n          post = _context.sent;\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}